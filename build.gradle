/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'apimentel' at '3/5/15 5:30 PM' with Gradle 2.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
buildscript {
    repositories {
        jcenter()
        maven{ url "http://repo.spring.io/snapshot"}
        maven{ url "http://repo.spring.io/milestone"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
        classpath 'org.springframework:springloaded:1.2.1.RELEASE'
    }
}
apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin:'application'

springBoot {
    requiresUnpack = ['com.netflix.eureka:eureka-core','com.netflix.eureka:eureka-client']
}

// In this section you declare where to find the dependencies of your project

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/libs-release' }
    maven {
        url 'http://nexus.plataforma.virginia.exp.mx/nexus/content/repositories/snapshots/'
        credentials {
            username nexusUsername
            password nexusPassword
        }
    }
    maven {
        url 'http://nexus.plataforma.virginia.exp.mx/nexus/content/repositories/thirdparty/'
        credentials {
            username nexusUsername
            password nexusPassword
        }
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile("org.springframework.boot:spring-boot-starter-test:1.2.1.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-security:1.2.1.RELEASE")
    compile 'org.springframework.cloud:spring-cloud-starter-eureka-server:1.0.0.RC3'

    //compile("org.springframework.boot:spring-boot-starter-zuul:1.0.0.RC3")
    compile 'org.slf4j:slf4j-api:1.7.7'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
}
